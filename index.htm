<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Stress map - Atlanta</title>

    <!-- Links to supporting files -->
    <link rel="stylesheet" href="style.css" />
    <!-- Map Setup -->
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
      integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
      crossorigin=""
    />
    <script
      src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
      integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
      crossorigin=""
    ></script>
  </head>

  <body>
    <h1>Map User location ðŸŽ¯</h1>
    <div id="map"></div>
  </body>

  <script>
    // Initilze map
    var map = L.map("map");
    // Set view (Lat, Long, Zoom)
    map.setView([33.753746, -84.38633], 13);

    // Add tiles with (lat, long, current zoom) maxZoom, and copyright logo
    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution:
        '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map);

    navigator.geolocation.watchPosition(success, error);

    let marker, circle, zoomed;

    // User allows access to location info
    function success(pos) {
      const lat = pos.coords.latitude;
      const long = pos.coords.longitude;
      const accuracy = pos.coords.accuracy; // how accurate the results are within a number of meters

      // Remove old marker to only show the current position of the user
      if (marker) {
        map.removeLayer(marker);
        map.removeLayer(circle);
      }

      marker = L.marker([lat, long]).addTo(map);
      circle = L.circle([lat, long, { radius: accuracy }]).addTo(map);

      // Only zoom to the updated coordinate once
      if (!zoomed) {
        zoomed = map.fitBounds(circle.getBounds());
      }

      // Update map to new location but not zoom back in
      map.setView([lat, long]);
      
    }

    // User denies access to location info
    function error(err) {
      // User denied access
      if (err === 1) {
        alert("Please allow geolocation access!");
      } else {
        alert("Cannot get current location, check browser settings");
      }
    }
  </script>
</html>
